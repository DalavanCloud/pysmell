PySmell design

There are 2 components in PySmell: First, the ctags-like generation of info
about the structure of the project (mainly, class methods and properties) and
second, the type inferencing omni-completion part, that looks at a specific
name in a scope, and tries to determine its class so it can give accurate
completion proposals.

CodeFinder

Using the compiler module, the CodeFinder class walks an AST and stores as much information as possible in a dict-like structure. This could then be written to disk for future reference.

pysmell

pysmell will be the 'invokable' part, it would glue everything else together.

vim-pyspell

vim-pyspell should handle the vim autocompletion part, gathering as much
information as possible passing it into pyspell, and formatting the completion
list, along with any other information (calltips, docstrings etc) for display.
